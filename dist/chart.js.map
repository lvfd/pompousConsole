{"version":3,"file":"chart.js","mappings":"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","sources":["webpack://@lyufudi/pompous-console/D:\\Users\\lvfd\\nodejs\\pompousConsole\\node_modules\\chart.js\\auto\\auto.js","webpack://@lyufudi/pompous-console/D:\\Users\\lvfd\\nodejs\\pompousConsole\\node_modules\\chart.js\\dist\\chart.js","webpack://@lyufudi/pompous-console/D:\\Users\\lvfd\\nodejs\\pompousConsole\\node_modules\\chart.js\\dist\\chunks\\helpers.segment.js"],"sourcesContent":["import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","animation","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","skipNull","val","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","newTicks","majorStart","majorEnd","ceil","round","offsetFromEdge","sample","numItems","result","increment","len","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","call","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","PI","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","configurable","enumerable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","noop","uid","isNullOrUndef","isArray","toString","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","toDimension","thisArg","each","loopable","_elementsEqual","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merge","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","resolveObjectKey","tmp","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","niceNum","roundedRange","niceRange","fraction","_factorize","isNumber","n","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","cmp","mid","_lookupByKey","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","object","unlistenArrayEvents","stub","_arrayUnique","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","timeout","clearTimeout","setTimeout","_toLeftRightCenter","_alignStartEnd","_textX","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","saturate","darken","colors","intlCache","formatNumber","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","describe","route","scopeObject","targetScopeObject","privateName","defineProperties","writable","appliers","_measureText","longest","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","parseInt","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_createResolver","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","_updateBezierControlPoints","controlPoints","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","splineCurveMonotone","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","getRelativePosition","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","getPropertyValue","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","sub","_computeSegments","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles"],"sourceRoot":""}